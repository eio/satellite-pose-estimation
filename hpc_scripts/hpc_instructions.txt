Access iris cluster:
ssh iris

To use GPU: Make an interactive sesion with resources with GPU (to try the code)
si-gpu
si-gpu -t <minutes>

Initialize a pip environment:
pipenv run (inside the directory where the project is)
pipenv shell

To install libraries from a requirements.txt:
pipenv install -r requirements.txt

To install manually each library:
pipenv install matplotlib numpy opencv-python pandas scipy scikit-image torch torchvision

This will creat a Pipfile which specifies the dependencies

To run the code in a pip environment:
pipenv run python run_train_model.py


terminal multiplexer for the hpce:
tmux	
ctrl +b then d for detach out of the tmux session
ctrl +b then c to create a new session
ctrl +b then n or p for next pr previous

tmux list-sessions
tmux attach 

Git:
git status (see changes)
 git add . (stage changes)
git commit -m "add Pipfile"



--- To run on  hpc:

ssh iris
git checkout hpc_testing
git pull
tmux 
si-gpu 
pipenv install matplotlib numpy opencv-python pandas scipy scikit-image torch torchvision
pipenv run python <path_to_file_to_run> 



--- To run with the whole dataset:

ssh iris
git checkout hpc_testing
git pull
sbatch run-stream-2.sh  # In home directory, also sends an email to the specified address when the job is submitted. Generates an .out file that logs any output generated by the job (errors, loggs, etc...)
squeue -u lamaya # To see submitted jobs (status, time remaining, etc...). If empty the job is either done or failed (either way check email)



------------------------------------------------------


#!/usr/bin/bash -l
#SBATCH --output=run-stream-2.out
#SBATCH --time=24:00:00
#SBATCH -p gpu
#SBATCH -G 4
#SBATCH -N 2
#SBATCH -J CVIA_Testing-Stream-2
#SBATCH --mail-type=ALL
#SBATCH --mail-user=lina.amaya.001@student.uni.lu

#rm -rf output/

srun pipenv run python /home/users/lamaya/satellite-pose-estimation/run_train_model.py



